# Here's my initial tmux config, which works well on macOS and Linux,
# and uses screen-like and vi bindings. If using Linux, see notes about
# xclip below.
#
# If you use iTerm and homebew on a mac, you can set it up to automatically
# launch a new tmux session whenever a new terminal window opens:
#
# 1) Install tmux (e.g. via homebrew: brew install tmux)
# 2) Put this file in your home directory, named .tmux.conf
# 3) Edit your iTerm Preferences:
#    a) Under General -> Selection:
#         Check Applications in terminal may access clipboard
#    b) Under Profiles -> General -> Command:
#         Change the command to /usr/local/bin/tmux -u -2
#    c) Under Profiles -> Terminal -> Terminal Emulation:
#         Check Enable mouse reporting
# 4) Go o Shell -> New Window to test

# Use screen-like keybindings for common tmux tasks
unbind C-b
set -g prefix C-a
bind-key C-a last-window
bind-key C-[ copy-mode
bind-key k confirm-before -p "kill-window #W? (y/n)" kill-window

# Allow mouse wheel to move the cursor
set -g mouse on

# Copy using vi keys (v to begin selection...)
bind-key -t vi-copy v begin-selection
# ...and y to yank. To copy to the system clipboard, choose one of the
# following methods:
# In OSX, with iTerm2, if you've checked the box to allow clipboard access,
# this binding is sufficient:
bind-key -t vi-copy y copy-selection
# Otherwise, you should install xclip and use this:
# bind-key -t vi-copy y copy-pipe "xclip -sel clip -i"

# Use vi mode and status keybindings
setw -g mode-keys vi
set -g status-keys vi

# Use | and - to create splits
bind | split-window -h
bind - split-window -v

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-Shift-vim keys without prefix key to resize panes
bind -n M-H resize-pane -L
bind -n M-J resize-pane -D
bind -n M-K resize-pane -U
bind -n M-L resize-pane -R

# Avoid delays
set -g escape-time 0

# Reload config easily
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded tmux configuration"
bind-key C-r source-file ~/.tmux.conf \; display-message "Reloaded tmux configuration"

# Keep lots of scrollback history
set-option -g history-limit 50000

# Colors and status bar settings
# Adapted from https://github.com/jimeh/tmux-themepack/blob/master/powerline/block/gray.tmuxtheme
# Recommended fonts: https://github.com/Lokaltog/powerline-fonts
set -g default-terminal "screen-256color"
set -g status-interval 1
set -g status-bg "#333333"
set -g status-fg colour243
set -g status-left ""
set -g status-right-bg "#333333"
set -g status-right-fg colour243
set -g status-right "%a %d %h %Y %l:%M %p "
set -g window-status-bg "#333333"
set -g window-status-fg colour243
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "
set -g window-status-current-bg colour245
set -g window-status-current-fg colour233
set -g window-status-activity-bg colour243
set -g window-status-activity-fg colour233
set -g window-status-separator ""
set -g status-justify left
set -g pane-border-bg default
set -g pane-border-fg colour235
set -g pane-active-border-bg default
set -g pane-active-border-fg colour240
set -g display-panes-colour colour233
set -g display-panes-active-colour colour245
set -g clock-mode-colour colour240
set -g clock-mode-style 12
set -g message-bg "#cccccc"
set -g message-fg colour232
set -g message-command-bg colour233
set -g message-command-fg colour250
set -g mode-bg colour243
set -g mode-fg colour232t
